-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spfph_mualgo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mu_0_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    mu_1_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_0_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_1_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_2_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_3_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_4_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_5_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_6_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_0_hwEta_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_1_hwEta_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_2_hwEta_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_3_hwEta_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_4_hwEta_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_5_hwEta_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_6_hwEta_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_0_hwPhi_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_1_hwPhi_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_2_hwPhi_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_3_hwPhi_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_4_hwPhi_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_5_hwPhi_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_6_hwPhi_V_rea : IN STD_LOGIC_VECTOR (8 downto 0);
    track_0_hwZ0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    track_1_hwZ0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    track_2_hwZ0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    track_3_hwZ0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    track_4_hwZ0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    track_5_hwZ0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    track_6_hwZ0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    mu_track_link_bit_0 : IN STD_LOGIC_VECTOR (1 downto 0);
    mu_track_link_bit_1 : IN STD_LOGIC_VECTOR (1 downto 0);
    mu_track_link_bit_2 : IN STD_LOGIC_VECTOR (1 downto 0);
    mu_track_link_bit_3 : IN STD_LOGIC_VECTOR (1 downto 0);
    mu_track_link_bit_4 : IN STD_LOGIC_VECTOR (1 downto 0);
    mu_track_link_bit_5 : IN STD_LOGIC_VECTOR (1 downto 0);
    mu_track_link_bit_6 : IN STD_LOGIC_VECTOR (1 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of spfph_mualgo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal tmp_131_fu_350_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_reg_1572 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1577 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1582 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_0_4_fu_424_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ibest_0_it_0_4_reg_1587 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_137_fu_436_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_reg_1592 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1597 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_fu_446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_reg_1603 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1608 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_1_4_fu_540_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ibest_0_it_1_4_reg_1618 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_145_fu_556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1628 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1634 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_fu_627_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_138_reg_1651 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_631_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_reg_1667 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_651_p9 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_reg_1673 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_fu_671_p9 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_reg_1679 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_fu_691_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_reg_1685 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_cond_1_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_1_reg_1691 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_146_fu_768_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_146_reg_1708 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_772_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_1723 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_792_p9 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_reg_1729 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_812_p9 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_reg_1735 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_832_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_19_reg_1741 : STD_LOGIC_VECTOR (9 downto 0);
    signal sel_tmp446_not_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp446_not_reg_1747 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp_reg_1752 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp166_not_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp166_not_reg_1758 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp1_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp1_reg_1763 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp187_not_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp187_not_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp208_not_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp208_not_reg_1775 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp152_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp152_reg_1781 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp45_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp45_reg_1788 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp6_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp6_reg_1794 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp47_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp47_reg_1799 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp7_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp7_reg_1805 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp8_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp8_reg_1811 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp54_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp54_reg_1816 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp168_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp168_reg_1821 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_preg : STD_LOGIC := '0';
    signal ap_port_reg_mu_0_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_mu_1_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_0_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_1_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_2_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_3_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_4_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_5_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_6_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_track_0_hwEta_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_1_hwEta_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_2_hwEta_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_3_hwEta_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_4_hwEta_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_5_hwEta_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_6_hwEta_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_0_hwPhi_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_1_hwPhi_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_2_hwPhi_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_3_hwPhi_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_4_hwPhi_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_5_hwPhi_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_6_hwPhi_V_rea : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_port_reg_track_0_hwZ0_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_track_1_hwZ0_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_track_2_hwZ0_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_track_3_hwZ0_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_track_4_hwZ0_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_track_5_hwZ0_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_track_6_hwZ0_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal not_Result_s_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_372_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_fu_368_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_0_1_cast_s_fu_376_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ibest_0_it_cast_fu_360_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ibest_0_it_0_2_fu_390_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_135_fu_406_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_fu_402_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_0_3_cast_s_fu_410_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ibest_0_it_0_2_cast_fu_398_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_136_fu_432_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_Result_1_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_fu_476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_fu_468_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_1_1_cast_s_fu_484_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ibest_0_it_1_cast_fu_460_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ibest_0_it_1_2_fu_498_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_143_fu_518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_fu_510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_1_3_cast_s_fu_526_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ibest_0_it_1_2_cast_fu_506_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_144_fu_548_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_0_5_cast_s_fu_570_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp24_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp21_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_0_6_fu_577_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp25_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_1_5_cast_s_fu_711_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp43_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp42_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ibest_0_it_1_6_fu_718_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_16_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp44_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_1_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp121_not_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp5_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp466_not_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp487_not_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp533_not_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp554_not_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp166_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp9_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp53_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp52_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp57_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp575_not_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp59_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp60_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp58_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_fu_1022_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp45_fu_1043_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sel_tmp70_fu_1056_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp116_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1084_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sel_tmp145_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp28_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp27_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp146_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp2_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp30_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp29_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp3_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp31_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp147_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp229_not_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp148_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp4_fu_1181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp34_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp33_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp36_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp37_fu_1209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp35_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp149_fu_1221_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp38_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp275_not_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp40_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp41_fu_1254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp39_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp151_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp153_fu_1277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp150_fu_1266_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp154_fu_1289_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp155_fu_1310_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sel_tmp156_fu_1323_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sel_tmp157_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag41_2_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp158_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp159_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp46_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag44_2_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp160_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp161_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp49_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp48_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag48_2_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp162_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp163_fu_1405_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp50_fu_1423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp164_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp51_fu_1427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag52_2_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp165_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp55_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp56_fu_1449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag55_2_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp167_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag58_2_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pfmuout_0_hwPt_V_wr_fu_1227_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfmuout_1_hwPt_V_wr_fu_1411_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfmuout_0_hwEta_V_w_fu_1090_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pfmuout_1_hwEta_V_w_fu_1316_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pfmuout_0_hwPhi_V_w_fu_1049_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pfmuout_1_hwPhi_V_w_fu_1282_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pfmuout_0_hwId_V_wr_fu_1035_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfmuout_1_hwId_V_wr_fu_1302_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfmuout_0_hwZ0_V_wr_fu_1062_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pfmuout_1_hwZ0_V_wr_fu_1329_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal isMu_0_write_assign_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isMu_1_write_assign_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isMu_2_write_assign_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isMu_3_write_assign_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isMu_4_write_assign_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isMu_5_write_assign_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isMu_6_write_assign_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_idle_pp0 : STD_LOGIC;

    component mp7wrapped_pfalgocud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (15 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component mp7wrapped_pfalgodEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (8 downto 0);
        din4 : IN STD_LOGIC_VECTOR (8 downto 0);
        din5 : IN STD_LOGIC_VECTOR (8 downto 0);
        din6 : IN STD_LOGIC_VECTOR (8 downto 0);
        din7 : IN STD_LOGIC_VECTOR (8 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component mp7wrapped_pfalgoeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (9 downto 0);
        din4 : IN STD_LOGIC_VECTOR (9 downto 0);
        din5 : IN STD_LOGIC_VECTOR (9 downto 0);
        din6 : IN STD_LOGIC_VECTOR (9 downto 0);
        din7 : IN STD_LOGIC_VECTOR (9 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    mp7wrapped_pfalgocud_U88 : component mp7wrapped_pfalgocud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din1 => ap_port_reg_track_0_hwPt_V_read,
        din2 => ap_port_reg_track_1_hwPt_V_read,
        din3 => ap_port_reg_track_2_hwPt_V_read,
        din4 => ap_port_reg_track_3_hwPt_V_read,
        din5 => ap_port_reg_track_4_hwPt_V_read,
        din6 => ap_port_reg_track_5_hwPt_V_read,
        din7 => ap_port_reg_track_6_hwPt_V_read,
        din8 => tmp_138_fu_627_p1,
        dout => tmp_1_fu_631_p9);

    mp7wrapped_pfalgodEe_U89 : component mp7wrapped_pfalgodEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        din4_WIDTH => 9,
        din5_WIDTH => 9,
        din6_WIDTH => 9,
        din7_WIDTH => 9,
        din8_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        din1 => ap_port_reg_track_0_hwEta_V_rea,
        din2 => ap_port_reg_track_1_hwEta_V_rea,
        din3 => ap_port_reg_track_2_hwEta_V_rea,
        din4 => ap_port_reg_track_3_hwEta_V_rea,
        din5 => ap_port_reg_track_4_hwEta_V_rea,
        din6 => ap_port_reg_track_5_hwEta_V_rea,
        din7 => ap_port_reg_track_6_hwEta_V_rea,
        din8 => tmp_138_fu_627_p1,
        dout => tmp_12_fu_651_p9);

    mp7wrapped_pfalgodEe_U90 : component mp7wrapped_pfalgodEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        din4_WIDTH => 9,
        din5_WIDTH => 9,
        din6_WIDTH => 9,
        din7_WIDTH => 9,
        din8_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        din1 => ap_port_reg_track_0_hwPhi_V_rea,
        din2 => ap_port_reg_track_1_hwPhi_V_rea,
        din3 => ap_port_reg_track_2_hwPhi_V_rea,
        din4 => ap_port_reg_track_3_hwPhi_V_rea,
        din5 => ap_port_reg_track_4_hwPhi_V_rea,
        din6 => ap_port_reg_track_5_hwPhi_V_rea,
        din7 => ap_port_reg_track_6_hwPhi_V_rea,
        din8 => tmp_138_fu_627_p1,
        dout => tmp_13_fu_671_p9);

    mp7wrapped_pfalgoeOg_U91 : component mp7wrapped_pfalgoeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 3,
        dout_WIDTH => 10)
    port map (
        din1 => ap_port_reg_track_0_hwZ0_V_read,
        din2 => ap_port_reg_track_1_hwZ0_V_read,
        din3 => ap_port_reg_track_2_hwZ0_V_read,
        din4 => ap_port_reg_track_3_hwZ0_V_read,
        din5 => ap_port_reg_track_4_hwZ0_V_read,
        din6 => ap_port_reg_track_5_hwZ0_V_read,
        din7 => ap_port_reg_track_6_hwZ0_V_read,
        din8 => tmp_138_fu_627_p1,
        dout => tmp_14_fu_691_p9);

    mp7wrapped_pfalgocud_U92 : component mp7wrapped_pfalgocud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din1 => ap_port_reg_track_0_hwPt_V_read,
        din2 => ap_port_reg_track_1_hwPt_V_read,
        din3 => ap_port_reg_track_2_hwPt_V_read,
        din4 => ap_port_reg_track_3_hwPt_V_read,
        din5 => ap_port_reg_track_4_hwPt_V_read,
        din6 => ap_port_reg_track_5_hwPt_V_read,
        din7 => ap_port_reg_track_6_hwPt_V_read,
        din8 => tmp_146_fu_768_p1,
        dout => tmp_16_fu_772_p9);

    mp7wrapped_pfalgodEe_U93 : component mp7wrapped_pfalgodEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        din4_WIDTH => 9,
        din5_WIDTH => 9,
        din6_WIDTH => 9,
        din7_WIDTH => 9,
        din8_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        din1 => ap_port_reg_track_0_hwEta_V_rea,
        din2 => ap_port_reg_track_1_hwEta_V_rea,
        din3 => ap_port_reg_track_2_hwEta_V_rea,
        din4 => ap_port_reg_track_3_hwEta_V_rea,
        din5 => ap_port_reg_track_4_hwEta_V_rea,
        din6 => ap_port_reg_track_5_hwEta_V_rea,
        din7 => ap_port_reg_track_6_hwEta_V_rea,
        din8 => tmp_146_fu_768_p1,
        dout => tmp_17_fu_792_p9);

    mp7wrapped_pfalgodEe_U94 : component mp7wrapped_pfalgodEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        din4_WIDTH => 9,
        din5_WIDTH => 9,
        din6_WIDTH => 9,
        din7_WIDTH => 9,
        din8_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        din1 => ap_port_reg_track_0_hwPhi_V_rea,
        din2 => ap_port_reg_track_1_hwPhi_V_rea,
        din3 => ap_port_reg_track_2_hwPhi_V_rea,
        din4 => ap_port_reg_track_3_hwPhi_V_rea,
        din5 => ap_port_reg_track_4_hwPhi_V_rea,
        din6 => ap_port_reg_track_5_hwPhi_V_rea,
        din7 => ap_port_reg_track_6_hwPhi_V_rea,
        din8 => tmp_146_fu_768_p1,
        dout => tmp_18_fu_812_p9);

    mp7wrapped_pfalgoeOg_U95 : component mp7wrapped_pfalgoeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 3,
        dout_WIDTH => 10)
    port map (
        din1 => ap_port_reg_track_0_hwZ0_V_read,
        din2 => ap_port_reg_track_1_hwZ0_V_read,
        din3 => ap_port_reg_track_2_hwZ0_V_read,
        din4 => ap_port_reg_track_3_hwZ0_V_read,
        din5 => ap_port_reg_track_4_hwZ0_V_read,
        din6 => ap_port_reg_track_5_hwZ0_V_read,
        din7 => ap_port_reg_track_6_hwZ0_V_read,
        din8 => tmp_146_fu_768_p1,
        dout => tmp_19_fu_832_p9);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_preg <= ap_const_logic_0;
            else
                if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter0_preg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                ap_port_reg_mu_0_hwPt_V_read <= mu_0_hwPt_V_read;
                ap_port_reg_mu_1_hwPt_V_read <= mu_1_hwPt_V_read;
                ap_port_reg_track_0_hwEta_V_rea <= track_0_hwEta_V_rea;
                ap_port_reg_track_0_hwPhi_V_rea <= track_0_hwPhi_V_rea;
                ap_port_reg_track_0_hwPt_V_read <= track_0_hwPt_V_read;
                ap_port_reg_track_0_hwZ0_V_read <= track_0_hwZ0_V_read;
                ap_port_reg_track_1_hwEta_V_rea <= track_1_hwEta_V_rea;
                ap_port_reg_track_1_hwPhi_V_rea <= track_1_hwPhi_V_rea;
                ap_port_reg_track_1_hwPt_V_read <= track_1_hwPt_V_read;
                ap_port_reg_track_1_hwZ0_V_read <= track_1_hwZ0_V_read;
                ap_port_reg_track_2_hwEta_V_rea <= track_2_hwEta_V_rea;
                ap_port_reg_track_2_hwPhi_V_rea <= track_2_hwPhi_V_rea;
                ap_port_reg_track_2_hwPt_V_read <= track_2_hwPt_V_read;
                ap_port_reg_track_2_hwZ0_V_read <= track_2_hwZ0_V_read;
                ap_port_reg_track_3_hwEta_V_rea <= track_3_hwEta_V_rea;
                ap_port_reg_track_3_hwPhi_V_rea <= track_3_hwPhi_V_rea;
                ap_port_reg_track_3_hwPt_V_read <= track_3_hwPt_V_read;
                ap_port_reg_track_3_hwZ0_V_read <= track_3_hwZ0_V_read;
                ap_port_reg_track_4_hwEta_V_rea <= track_4_hwEta_V_rea;
                ap_port_reg_track_4_hwPhi_V_rea <= track_4_hwPhi_V_rea;
                ap_port_reg_track_4_hwPt_V_read <= track_4_hwPt_V_read;
                ap_port_reg_track_4_hwZ0_V_read <= track_4_hwZ0_V_read;
                ap_port_reg_track_5_hwEta_V_rea <= track_5_hwEta_V_rea;
                ap_port_reg_track_5_hwPhi_V_rea <= track_5_hwPhi_V_rea;
                ap_port_reg_track_5_hwPt_V_read <= track_5_hwPt_V_read;
                ap_port_reg_track_5_hwZ0_V_read <= track_5_hwZ0_V_read;
                ap_port_reg_track_6_hwEta_V_rea <= track_6_hwEta_V_rea;
                ap_port_reg_track_6_hwPhi_V_rea <= track_6_hwPhi_V_rea;
                ap_port_reg_track_6_hwPt_V_read <= track_6_hwPt_V_read;
                ap_port_reg_track_6_hwZ0_V_read <= track_6_hwZ0_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))))) then
                ibest_0_it_0_4_reg_1587 <= ibest_0_it_0_4_fu_424_p3;
                ibest_0_it_1_4_reg_1618 <= ibest_0_it_1_4_fu_540_p3;
                not_sel_tmp1_reg_1763 <= not_sel_tmp1_fu_873_p2;
                not_sel_tmp6_reg_1794 <= not_sel_tmp6_fu_907_p2;
                not_sel_tmp7_reg_1805 <= not_sel_tmp7_fu_923_p2;
                not_sel_tmp8_reg_1811 <= not_sel_tmp8_fu_933_p2;
                not_sel_tmp_reg_1752 <= not_sel_tmp_fu_863_p2;
                sel_tmp152_reg_1781 <= sel_tmp152_fu_888_p2;
                sel_tmp166_not_reg_1758 <= sel_tmp166_not_fu_868_p2;
                sel_tmp168_reg_1821 <= sel_tmp168_fu_1000_p2;
                sel_tmp187_not_reg_1769 <= sel_tmp187_not_fu_878_p2;
                sel_tmp208_not_reg_1775 <= sel_tmp208_not_fu_883_p2;
                tmp45_reg_1788 <= tmp45_fu_897_p2;
                tmp47_reg_1799 <= tmp47_fu_912_p2;
                tmp54_reg_1816 <= tmp54_fu_965_p2;
                tmp_131_reg_1572 <= tmp_131_fu_350_p1;
                tmp_137_reg_1592 <= tmp_137_fu_436_p1;
                tmp_139_reg_1603 <= mu_track_link_bit_0(1 downto 1);
                tmp_145_reg_1623 <= mu_track_link_bit_6(1 downto 1);
                tmp_4_reg_1608 <= tmp_4_fu_492_p2;
                tmp_5_reg_1577 <= tmp_5_fu_384_p2;
                tmp_6_reg_1582 <= tmp_6_fu_418_p2;
                tmp_7_reg_1597 <= tmp_7_fu_440_p2;
                tmp_8_reg_1613 <= tmp_8_fu_534_p2;
                tmp_9_reg_1628 <= tmp_9_fu_564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                or_cond_1_reg_1691 <= or_cond_1_fu_762_p2;
                or_cond_reg_1634 <= or_cond_fu_621_p2;
                sel_tmp446_not_reg_1747 <= sel_tmp446_not_fu_852_p2;
                tmp_12_reg_1673 <= tmp_12_fu_651_p9;
                tmp_138_reg_1651 <= tmp_138_fu_627_p1;
                tmp_13_reg_1679 <= tmp_13_fu_671_p9;
                tmp_146_reg_1708 <= tmp_146_fu_768_p1;
                tmp_14_reg_1685 <= tmp_14_fu_691_p9;
                tmp_16_reg_1723 <= tmp_16_fu_772_p9;
                tmp_17_reg_1729 <= tmp_17_fu_792_p9;
                tmp_18_reg_1735 <= tmp_18_fu_812_p9;
                tmp_19_reg_1741 <= tmp_19_fu_832_p9;
                tmp_1_reg_1667 <= tmp_1_fu_631_p9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_pipeline_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_start = ap_const_logic_0))) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1 downto 1);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_preg)
    begin
        if ((ap_CS_fsm_pp0_stage0 = ap_const_lv1_1)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_preg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_pp0_stage0 = ap_const_lv1_1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_pipeline_idle_pp0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_enable_reg_pp0_iter0))) then 
            ap_pipeline_idle_pp0 <= ap_const_logic_1;
        else 
            ap_pipeline_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= pfmuout_0_hwPt_V_wr_fu_1227_p3;
    ap_return_1 <= pfmuout_1_hwPt_V_wr_fu_1411_p3;
    ap_return_10 <= isMu_0_write_assign_fu_1336_p2;
    ap_return_11 <= isMu_1_write_assign_fu_1352_p2;
    ap_return_12 <= isMu_2_write_assign_fu_1373_p2;
    ap_return_13 <= isMu_3_write_assign_fu_1399_p2;
    ap_return_14 <= isMu_4_write_assign_fu_1439_p2;
    ap_return_15 <= isMu_5_write_assign_fu_1459_p2;
    ap_return_16 <= isMu_6_write_assign_fu_1465_p2;
    ap_return_2 <= pfmuout_0_hwEta_V_w_fu_1090_p3;
    ap_return_3 <= pfmuout_1_hwEta_V_w_fu_1316_p3;
    ap_return_4 <= pfmuout_0_hwPhi_V_w_fu_1049_p3;
    ap_return_5 <= pfmuout_1_hwPhi_V_w_fu_1282_p3;
    ap_return_6 <= pfmuout_0_hwId_V_wr_fu_1035_p3;
    ap_return_7 <= pfmuout_1_hwId_V_wr_fu_1302_p3;
    ap_return_8 <= pfmuout_0_hwZ0_V_wr_fu_1062_p3;
    ap_return_9 <= pfmuout_1_hwZ0_V_wr_fu_1329_p3;
    ibest_0_it_0_1_cast_s_fu_376_p3 <= 
        ap_const_lv3_2 when (tmp_133_fu_372_p1(0) = '1') else 
        ap_const_lv3_1;
        ibest_0_it_0_2_cast_fu_398_p1 <= std_logic_vector(resize(signed(ibest_0_it_0_2_fu_390_p3),4));

    ibest_0_it_0_2_fu_390_p3 <= 
        ibest_0_it_0_1_cast_s_fu_376_p3 when (tmp_5_fu_384_p2(0) = '1') else 
        ibest_0_it_cast_fu_360_p3;
    ibest_0_it_0_3_cast_s_fu_410_p3 <= 
        ap_const_lv4_4 when (tmp_135_fu_406_p1(0) = '1') else 
        ap_const_lv4_3;
    ibest_0_it_0_4_fu_424_p3 <= 
        ibest_0_it_0_3_cast_s_fu_410_p3 when (tmp_6_fu_418_p2(0) = '1') else 
        ibest_0_it_0_2_cast_fu_398_p1;
    ibest_0_it_0_5_cast_s_fu_570_p3 <= 
        ap_const_lv4_6 when (tmp_137_reg_1592(0) = '1') else 
        ap_const_lv4_5;
    ibest_0_it_0_6_fu_577_p3 <= 
        ibest_0_it_0_5_cast_s_fu_570_p3 when (tmp_7_reg_1597(0) = '1') else 
        ibest_0_it_0_4_reg_1587;
    ibest_0_it_1_1_cast_s_fu_484_p3 <= 
        ap_const_lv3_2 when (tmp_141_fu_476_p3(0) = '1') else 
        ap_const_lv3_1;
        ibest_0_it_1_2_cast_fu_506_p1 <= std_logic_vector(resize(signed(ibest_0_it_1_2_fu_498_p3),4));

    ibest_0_it_1_2_fu_498_p3 <= 
        ibest_0_it_1_1_cast_s_fu_484_p3 when (tmp_4_fu_492_p2(0) = '1') else 
        ibest_0_it_1_cast_fu_460_p3;
    ibest_0_it_1_3_cast_s_fu_526_p3 <= 
        ap_const_lv4_4 when (tmp_143_fu_518_p3(0) = '1') else 
        ap_const_lv4_3;
    ibest_0_it_1_4_fu_540_p3 <= 
        ibest_0_it_1_3_cast_s_fu_526_p3 when (tmp_8_fu_534_p2(0) = '1') else 
        ibest_0_it_1_2_cast_fu_506_p1;
    ibest_0_it_1_5_cast_s_fu_711_p3 <= 
        ap_const_lv4_6 when (tmp_145_reg_1623(0) = '1') else 
        ap_const_lv4_5;
    ibest_0_it_1_6_fu_718_p3 <= 
        ibest_0_it_1_5_cast_s_fu_711_p3 when (tmp_9_reg_1628(0) = '1') else 
        ibest_0_it_1_4_reg_1618;
    ibest_0_it_1_cast_fu_460_p3 <= 
        ap_const_lv3_7 when (not_Result_1_fu_454_p2(0) = '1') else 
        ap_const_lv3_0;
    ibest_0_it_cast_fu_360_p3 <= 
        ap_const_lv3_7 when (not_Result_s_fu_354_p2(0) = '1') else 
        ap_const_lv3_0;
    isMu_0_write_assign_fu_1336_p2 <= (sel_tmp153_fu_1277_p2 or sel_tmp23_fu_1016_p2);
    isMu_1_write_assign_fu_1352_p2 <= (write_flag41_2_fu_1078_p2 or sel_tmp158_fu_1347_p2);
    isMu_2_write_assign_fu_1373_p2 <= (write_flag44_2_fu_1112_p2 or sel_tmp160_fu_1368_p2);
    isMu_3_write_assign_fu_1399_p2 <= (write_flag48_2_fu_1139_p2 or sel_tmp162_fu_1393_p2);
    isMu_4_write_assign_fu_1439_p2 <= (write_flag52_2_fu_1165_p2 or sel_tmp165_fu_1433_p2);
    isMu_5_write_assign_fu_1459_p2 <= (write_flag55_2_fu_1215_p2 or sel_tmp167_fu_1454_p2);
    isMu_6_write_assign_fu_1465_p2 <= (write_flag58_2_fu_1260_p2 or sel_tmp168_reg_1821);
    not_Result_1_fu_454_p2 <= (tmp_139_fu_446_p3 xor ap_const_lv1_1);
    not_Result_s_fu_354_p2 <= (tmp_131_fu_350_p1 xor ap_const_lv1_1);
    not_sel_tmp1_fu_873_p2 <= (or_cond_reg_1634 or sel_tmp166_not_fu_868_p2);
    not_sel_tmp2_fu_1123_p2 <= (or_cond_reg_1634 or sel_tmp187_not_reg_1769);
    not_sel_tmp3_fu_1150_p2 <= (sel_tmp208_not_reg_1775 or or_cond_reg_1634);
    not_sel_tmp4_fu_1181_p2 <= (or_cond_reg_1634 or sel_tmp229_not_fu_1176_p2);
    not_sel_tmp5_fu_893_p2 <= (sel_tmp446_not_reg_1747 or or_cond_1_reg_1691);
    not_sel_tmp6_fu_907_p2 <= (or_cond_1_reg_1691 or sel_tmp466_not_fu_902_p2);
    not_sel_tmp7_fu_923_p2 <= (or_cond_1_reg_1691 or sel_tmp487_not_fu_918_p2);
    not_sel_tmp8_fu_933_p2 <= (sel_tmp533_not_fu_928_p2 or or_cond_1_reg_1691);
    not_sel_tmp9_fu_948_p2 <= (or_cond_1_reg_1691 or sel_tmp554_not_fu_943_p2);
    not_sel_tmp_fu_863_p2 <= (sel_tmp121_not_fu_858_p2 or or_cond_reg_1634);
    or_cond_1_fu_762_p2 <= (tmp44_fu_756_p2 or p_not_1_fu_724_p2);
    or_cond_fu_621_p2 <= (tmp25_fu_615_p2 or p_not_fu_583_p2);
    p_not_1_fu_724_p2 <= "1" when (signed(ap_port_reg_mu_1_hwPt_V_read) < signed(ap_const_lv16_1)) else "0";
    p_not_fu_583_p2 <= "1" when (signed(ap_port_reg_mu_0_hwPt_V_read) < signed(ap_const_lv16_1)) else "0";
    pfmuout_0_hwEta_V_w_fu_1090_p3 <= 
        tmp_12_reg_1673 when (sel_tmp23_fu_1016_p2(0) = '1') else 
        sel_tmp_fu_1084_p3;
    pfmuout_0_hwId_V_wr_fu_1035_p3 <= 
        sel_tmp20_fu_1022_p3 when (tmp_15_fu_1030_p2(0) = '1') else 
        ap_const_lv3_4;
    pfmuout_0_hwPhi_V_w_fu_1049_p3 <= 
        tmp_13_reg_1679 when (sel_tmp23_fu_1016_p2(0) = '1') else 
        sel_tmp45_fu_1043_p3;
    pfmuout_0_hwPt_V_wr_fu_1227_p3 <= 
        tmp_1_reg_1667 when (sel_tmp23_fu_1016_p2(0) = '1') else 
        sel_tmp149_fu_1221_p3;
    pfmuout_0_hwZ0_V_wr_fu_1062_p3 <= 
        tmp_14_reg_1685 when (sel_tmp23_fu_1016_p2(0) = '1') else 
        sel_tmp70_fu_1056_p3;
    pfmuout_1_hwEta_V_w_fu_1316_p3 <= 
        tmp_17_reg_1729 when (sel_tmp153_fu_1277_p2(0) = '1') else 
        sel_tmp155_fu_1310_p3;
    pfmuout_1_hwId_V_wr_fu_1302_p3 <= 
        sel_tmp154_fu_1289_p3 when (tmp_20_fu_1297_p2(0) = '1') else 
        ap_const_lv3_4;
    pfmuout_1_hwPhi_V_w_fu_1282_p3 <= 
        tmp_18_reg_1735 when (sel_tmp153_fu_1277_p2(0) = '1') else 
        sel_tmp150_fu_1266_p3;
    pfmuout_1_hwPt_V_wr_fu_1411_p3 <= 
        tmp_16_reg_1723 when (sel_tmp153_fu_1277_p2(0) = '1') else 
        sel_tmp163_fu_1405_p3;
    pfmuout_1_hwZ0_V_wr_fu_1329_p3 <= 
        tmp_19_reg_1741 when (sel_tmp153_fu_1277_p2(0) = '1') else 
        sel_tmp156_fu_1323_p3;
    sel_tmp116_fu_1069_p2 <= "1" when (tmp_138_reg_1651 = ap_const_lv3_1) else "0";
    sel_tmp121_not_fu_858_p2 <= "0" when (tmp_138_reg_1651 = ap_const_lv3_0) else "1";
    sel_tmp145_fu_1097_p2 <= "1" when (tmp_138_reg_1651 = ap_const_lv3_2) else "0";
    sel_tmp146_fu_1118_p2 <= "1" when (tmp_138_reg_1651 = ap_const_lv3_3) else "0";
    sel_tmp147_fu_1145_p2 <= "1" when (tmp_138_reg_1651 = ap_const_lv3_4) else "0";
    sel_tmp148_fu_1171_p2 <= "1" when (tmp_138_reg_1651 = ap_const_lv3_5) else "0";
    sel_tmp149_fu_1221_p3 <= 
        ap_const_lv16_0 when (or_cond_reg_1634(0) = '1') else 
        tmp_1_reg_1667;
    sel_tmp150_fu_1266_p3 <= 
        ap_const_lv9_0 when (or_cond_1_reg_1691(0) = '1') else 
        tmp_18_reg_1735;
    sel_tmp151_fu_1272_p2 <= "1" when (tmp_146_reg_1708 = ap_const_lv3_0) else "0";
    sel_tmp152_fu_888_p2 <= (or_cond_1_reg_1691 xor ap_const_lv1_1);
    sel_tmp153_fu_1277_p2 <= (sel_tmp151_fu_1272_p2 and sel_tmp152_reg_1781);
    sel_tmp154_fu_1289_p3 <= 
        ap_const_lv3_4 when (sel_tmp153_fu_1277_p2(0) = '1') else 
        ap_const_lv3_0;
    sel_tmp155_fu_1310_p3 <= 
        ap_const_lv9_0 when (or_cond_1_reg_1691(0) = '1') else 
        tmp_17_reg_1729;
    sel_tmp156_fu_1323_p3 <= 
        ap_const_lv10_0 when (or_cond_1_reg_1691(0) = '1') else 
        tmp_19_reg_1741;
    sel_tmp157_fu_1342_p2 <= "1" when (tmp_146_reg_1708 = ap_const_lv3_1) else "0";
    sel_tmp158_fu_1347_p2 <= (tmp45_reg_1788 and sel_tmp157_fu_1342_p2);
    sel_tmp159_fu_1358_p2 <= "1" when (tmp_146_reg_1708 = ap_const_lv3_2) else "0";
    sel_tmp160_fu_1368_p2 <= (tmp47_reg_1799 and tmp46_fu_1363_p2);
    sel_tmp161_fu_1379_p2 <= "1" when (tmp_146_reg_1708 = ap_const_lv3_3) else "0";
    sel_tmp162_fu_1393_p2 <= (tmp49_fu_1389_p2 and tmp48_fu_1384_p2);
    sel_tmp163_fu_1405_p3 <= 
        ap_const_lv16_0 when (or_cond_1_reg_1691(0) = '1') else 
        tmp_16_reg_1723;
    sel_tmp164_fu_1418_p2 <= "1" when (tmp_146_reg_1708 = ap_const_lv3_4) else "0";
    sel_tmp165_fu_1433_p2 <= (tmp49_fu_1389_p2 and tmp51_fu_1427_p2);
    sel_tmp166_fu_938_p2 <= "1" when (tmp_146_reg_1708 = ap_const_lv3_5) else "0";
    sel_tmp166_not_fu_868_p2 <= "0" when (tmp_138_reg_1651 = ap_const_lv3_1) else "1";
    sel_tmp167_fu_1454_p2 <= (tmp56_fu_1449_p2 and tmp54_reg_1816);
    sel_tmp168_fu_1000_p2 <= (tmp60_fu_994_p2 and tmp58_fu_982_p2);
    sel_tmp187_not_fu_878_p2 <= "0" when (tmp_138_reg_1651 = ap_const_lv3_2) else "1";
    sel_tmp208_not_fu_883_p2 <= "0" when (tmp_138_reg_1651 = ap_const_lv3_3) else "1";
    sel_tmp20_fu_1022_p3 <= 
        ap_const_lv3_4 when (sel_tmp23_fu_1016_p2(0) = '1') else 
        ap_const_lv3_0;
    sel_tmp21_fu_1006_p2 <= "1" when (tmp_138_reg_1651 = ap_const_lv3_0) else "0";
    sel_tmp229_not_fu_1176_p2 <= "0" when (tmp_138_reg_1651 = ap_const_lv3_4) else "1";
    sel_tmp22_fu_1011_p2 <= (or_cond_reg_1634 xor ap_const_lv1_1);
    sel_tmp23_fu_1016_p2 <= (sel_tmp21_fu_1006_p2 and sel_tmp22_fu_1011_p2);
    sel_tmp275_not_fu_1234_p2 <= "0" when (tmp_138_reg_1651 = ap_const_lv3_5) else "1";
    sel_tmp446_not_fu_852_p2 <= "0" when (tmp_146_fu_768_p1 = ap_const_lv3_0) else "1";
    sel_tmp45_fu_1043_p3 <= 
        ap_const_lv9_0 when (or_cond_reg_1634(0) = '1') else 
        tmp_13_reg_1679;
    sel_tmp466_not_fu_902_p2 <= "0" when (tmp_146_reg_1708 = ap_const_lv3_1) else "1";
    sel_tmp487_not_fu_918_p2 <= "0" when (tmp_146_reg_1708 = ap_const_lv3_2) else "1";
    sel_tmp533_not_fu_928_p2 <= "0" when (tmp_146_reg_1708 = ap_const_lv3_3) else "1";
    sel_tmp554_not_fu_943_p2 <= "0" when (tmp_146_reg_1708 = ap_const_lv3_4) else "1";
    sel_tmp575_not_fu_971_p2 <= "0" when (tmp_146_reg_1708 = ap_const_lv3_5) else "1";
    sel_tmp70_fu_1056_p3 <= 
        ap_const_lv10_0 when (or_cond_reg_1634(0) = '1') else 
        tmp_14_reg_1685;
    sel_tmp_fu_1084_p3 <= 
        ap_const_lv9_0 when (or_cond_reg_1634(0) = '1') else 
        tmp_12_reg_1673;
    tmp21_fu_589_p2 <= (tmp_5_reg_1577 or tmp_131_reg_1572);
    tmp24_fu_593_p2 <= (tmp_7_reg_1597 or tmp_6_reg_1582);
    tmp25_fu_615_p2 <= (tmp_s_fu_609_p2 or tmp_3_fu_603_p2);
    tmp27_fu_1102_p2 <= (sel_tmp145_fu_1097_p2 and sel_tmp22_fu_1011_p2);
    tmp28_fu_1108_p2 <= (not_sel_tmp1_reg_1763 and not_sel_tmp_reg_1752);
    tmp29_fu_1127_p2 <= (sel_tmp146_fu_1118_p2 and sel_tmp22_fu_1011_p2);
    tmp30_fu_1133_p2 <= (tmp28_fu_1108_p2 and not_sel_tmp2_fu_1123_p2);
    tmp31_fu_1154_p2 <= (not_sel_tmp3_fu_1150_p2 xor or_cond_reg_1634);
    tmp32_fu_1159_p2 <= (tmp31_fu_1154_p2 and sel_tmp147_fu_1145_p2);
    tmp33_fu_1186_p2 <= (sel_tmp148_fu_1171_p2 and sel_tmp22_fu_1011_p2);
    tmp34_fu_1192_p2 <= (not_sel_tmp4_fu_1181_p2 and not_sel_tmp3_fu_1150_p2);
    tmp35_fu_1198_p2 <= (tmp34_fu_1192_p2 and tmp33_fu_1186_p2);
    tmp36_fu_1204_p2 <= (not_sel_tmp2_fu_1123_p2 and not_sel_tmp1_reg_1763);
    tmp37_fu_1209_p2 <= (tmp_fu_1074_p2 and tmp36_fu_1204_p2);
    tmp38_fu_1239_p2 <= (sel_tmp229_not_fu_1176_p2 and sel_tmp208_not_reg_1775);
    tmp39_fu_1244_p2 <= (tmp38_fu_1239_p2 and sel_tmp275_not_fu_1234_p2);
    tmp40_fu_1250_p2 <= (sel_tmp187_not_reg_1769 and sel_tmp166_not_reg_1758);
    tmp41_fu_1254_p2 <= (tmp_fu_1074_p2 and tmp40_fu_1250_p2);
    tmp42_fu_730_p2 <= (tmp_4_reg_1608 or tmp_139_reg_1603);
    tmp43_fu_734_p2 <= (tmp_9_reg_1628 or tmp_8_reg_1613);
    tmp44_fu_756_p2 <= (tmp_1_16_fu_750_p2 or tmp_11_fu_744_p2);
    tmp45_fu_897_p2 <= (not_sel_tmp5_fu_893_p2 xor or_cond_1_reg_1691);
    tmp46_fu_1363_p2 <= (sel_tmp159_fu_1358_p2 and sel_tmp152_reg_1781);
    tmp47_fu_912_p2 <= (not_sel_tmp6_fu_907_p2 and not_sel_tmp5_fu_893_p2);
    tmp48_fu_1384_p2 <= (sel_tmp161_fu_1379_p2 and sel_tmp152_reg_1781);
    tmp49_fu_1389_p2 <= (tmp47_reg_1799 and not_sel_tmp7_reg_1805);
    tmp50_fu_1423_p2 <= (not_sel_tmp8_reg_1811 xor or_cond_1_reg_1691);
    tmp51_fu_1427_p2 <= (tmp50_fu_1423_p2 and sel_tmp164_fu_1418_p2);
    tmp52_fu_953_p2 <= (sel_tmp166_fu_938_p2 and sel_tmp152_fu_888_p2);
    tmp53_fu_959_p2 <= (not_sel_tmp9_fu_948_p2 and not_sel_tmp8_fu_933_p2);
    tmp54_fu_965_p2 <= (tmp53_fu_959_p2 and tmp52_fu_953_p2);
    tmp55_fu_1445_p2 <= (not_sel_tmp7_reg_1805 and not_sel_tmp6_reg_1794);
    tmp56_fu_1449_p2 <= (tmp45_reg_1788 and tmp55_fu_1445_p2);
    tmp57_fu_976_p2 <= (sel_tmp554_not_fu_943_p2 and sel_tmp533_not_fu_928_p2);
    tmp58_fu_982_p2 <= (tmp57_fu_976_p2 and sel_tmp575_not_fu_971_p2);
    tmp59_fu_988_p2 <= (sel_tmp487_not_fu_918_p2 and sel_tmp466_not_fu_902_p2);
    tmp60_fu_994_p2 <= (tmp45_fu_897_p2 and tmp59_fu_988_p2);
    tmp_10_fu_738_p2 <= (tmp43_fu_734_p2 or tmp42_fu_730_p2);
    tmp_11_fu_744_p2 <= (tmp_10_fu_738_p2 xor ap_const_lv1_1);
    tmp_131_fu_350_p1 <= mu_track_link_bit_0(1 - 1 downto 0);
    tmp_132_fu_368_p1 <= mu_track_link_bit_1(1 - 1 downto 0);
    tmp_133_fu_372_p1 <= mu_track_link_bit_2(1 - 1 downto 0);
    tmp_134_fu_402_p1 <= mu_track_link_bit_3(1 - 1 downto 0);
    tmp_135_fu_406_p1 <= mu_track_link_bit_4(1 - 1 downto 0);
    tmp_136_fu_432_p1 <= mu_track_link_bit_5(1 - 1 downto 0);
    tmp_137_fu_436_p1 <= mu_track_link_bit_6(1 - 1 downto 0);
    tmp_138_fu_627_p1 <= ibest_0_it_0_6_fu_577_p3(3 - 1 downto 0);
    tmp_139_fu_446_p3 <= mu_track_link_bit_0(1 downto 1);
    tmp_140_fu_468_p3 <= mu_track_link_bit_1(1 downto 1);
    tmp_141_fu_476_p3 <= mu_track_link_bit_2(1 downto 1);
    tmp_142_fu_510_p3 <= mu_track_link_bit_3(1 downto 1);
    tmp_143_fu_518_p3 <= mu_track_link_bit_4(1 downto 1);
    tmp_144_fu_548_p3 <= mu_track_link_bit_5(1 downto 1);
    tmp_145_fu_556_p3 <= mu_track_link_bit_6(1 downto 1);
    tmp_146_fu_768_p1 <= ibest_0_it_1_6_fu_718_p3(3 - 1 downto 0);
    tmp_15_fu_1030_p2 <= (sel_tmp23_fu_1016_p2 or or_cond_reg_1634);
    tmp_1_16_fu_750_p2 <= "1" when (ibest_0_it_1_6_fu_718_p3 = ap_const_lv4_F) else "0";
    tmp_20_fu_1297_p2 <= (sel_tmp153_fu_1277_p2 or or_cond_1_reg_1691);
    tmp_2_fu_597_p2 <= (tmp24_fu_593_p2 or tmp21_fu_589_p2);
    tmp_3_fu_603_p2 <= (tmp_2_fu_597_p2 xor ap_const_lv1_1);
    tmp_4_fu_492_p2 <= (tmp_141_fu_476_p3 or tmp_140_fu_468_p3);
    tmp_5_fu_384_p2 <= (tmp_133_fu_372_p1 or tmp_132_fu_368_p1);
    tmp_6_fu_418_p2 <= (tmp_135_fu_406_p1 or tmp_134_fu_402_p1);
    tmp_7_fu_440_p2 <= (tmp_137_fu_436_p1 or tmp_136_fu_432_p1);
    tmp_8_fu_534_p2 <= (tmp_143_fu_518_p3 or tmp_142_fu_510_p3);
    tmp_9_fu_564_p2 <= (tmp_145_fu_556_p3 or tmp_144_fu_548_p3);
    tmp_fu_1074_p2 <= (not_sel_tmp_reg_1752 xor or_cond_reg_1634);
    tmp_s_fu_609_p2 <= "1" when (ibest_0_it_0_6_fu_577_p3 = ap_const_lv4_F) else "0";
    write_flag41_2_fu_1078_p2 <= (tmp_fu_1074_p2 and sel_tmp116_fu_1069_p2);
    write_flag44_2_fu_1112_p2 <= (tmp28_fu_1108_p2 and tmp27_fu_1102_p2);
    write_flag48_2_fu_1139_p2 <= (tmp30_fu_1133_p2 and tmp29_fu_1127_p2);
    write_flag52_2_fu_1165_p2 <= (tmp30_fu_1133_p2 and tmp32_fu_1159_p2);
    write_flag55_2_fu_1215_p2 <= (tmp37_fu_1209_p2 and tmp35_fu_1198_p2);
    write_flag58_2_fu_1260_p2 <= (tmp41_fu_1254_p2 and tmp39_fu_1244_p2);
end behav;
